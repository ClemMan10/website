---
import Navbar from "../components/Navbar.astro";
import Video from "../components/Video.astro";
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const data = await getCollection("videos");
---

<style lang="scss">
  @use "bulma/sass/layout/hero";
  @use "bulma/sass/layout/container";
  @use "bulma/sass/elements/title";

  .cover-image {
    background:
      linear-gradient(0deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 1) 100%),
      url("/website/cover.jpg") center/cover;
    text-align: center;
    font-weight: 700;

    h1,
    h2 {
      color: white;
    }
  }

  .videos-wrapper {
    .videos {
      display: flex;
      flex-wrap: wrap;
      gap: 1.5rem;
      transition: max-height 0.5s ease;
    }

    /* Par d√©faut on masque clairement le bouton (redondance CSS) */
    .toggle-videos {
      display: none !important;
      margin-top: 1rem;
      padding: 0.5rem 0.75rem;
      // background-color: #222;
      background: linear-gradient(45deg, #ea475f, #92dbf5);
      color: white;
      border: none;
      border-radius: 50%;
      cursor: pointer;
      font-size: 1.25rem;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.25rem;
      transition: background-color 0.2s ease;
    }

    .toggle-videos:hover {
      background-color: #444;
    }
  }

  /* Mobile : collapse et bouton visible */
  @media (max-width: 768px) {
    .videos-wrapper .videos {
      max-height: calc(3 * 180px + 1.5rem * 2); /* 3 vid√©os + gaps */
      overflow: hidden;
    }

    .videos-wrapper .videos.expanded {
      max-height: 1000px; /* assez grand pour toutes les vid√©os */
    }

    .videos-wrapper .toggle-videos {
      display: flex !important; /* visible uniquement sur mobile */
    }
  }
</style>

<Layout>
  <Navbar slot="navbar" />

  <!-- Cover modifi√©e -->
  <div class="hero cover-image">
    <div class="container hero-body">
      <h1 class="title">IN THE POUCHETT</h1>
      <h2 class="subtitle">Enregistrements, Mixages, Live Sessions</h2>
    </div>
  </div>

  <style lang="scss">
    .cover-image {
      background:
        linear-gradient(0deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 1) 100%),
        url("/website/cover.jpg") center/cover;
      text-align: center;
      font-weight: 700;

      /* Hauteur 3/4 sur desktop */
      min-height: 75vh;

      h1,
      h2 {
        color: white;
      }

      /* Centrage vertical Bulma-friendly */
      .hero-body {
        display: flex;
        flex-direction: column;
        justify-content: center; /* centre verticalement */
        align-items: center; /* centre horizontalement */
      }
        /* Ajustement des tailles de texte */
      .title {
        font-size: 4rem; /* Taille principale */
        line-height: 1.1;
      }

      .subtitle {
        font-size: 2rem;
        font-weight: 400;
        margin-top: 0.5rem;
      }
    }

    /* Mobile portrait : cover plus petite */
    @media (max-width: 768px) and (orientation: portrait) {
      .cover-image {
        min-height: 33vh; /* 1/3 de l‚Äô√©cran */
      }
      .title {
       font-size: 2.5rem !important;
      }

      .subtitle {
        font-size: 1.5rem !important;
      }
    }

    // .studio-gallery {
    //   display: grid;
    //   grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    //   gap: 1rem;
    //   margin-top: 1.5rem;
    // }

    // .studio-item {
    //   position: relative;
    //   // aspect-ratio: 4/3; /* ajuste le ratio (4/3 ou 16/9) */
    //   overflow: hidden;
    //   border-radius: 8px;
    //   cursor: pointer;
    //   z-index: 1;
    // }

    // .studio-item.wide {
    //   grid-column: span 2;
    // }

    // .studio-item.tall {
    //   grid-row: span 2;
    // }
    // .studio-item img {
    //   width: 100%;
    //   height: 100%;
    //   display: block;
    //   object-fit: cover;
    //   border-radius: 8px;
    //   transition: transform 0.3s ease;
    //   pointer-events: auto;
    // }

    // .studio-item:hover img {
    //   transform: scale(1.05);
    // }

    // /* L√©gende au hover */
    // .caption {
    //   position: absolute;
    //   bottom: 0;
    //   left: 0;
    //   right: 0;
    //   background: rgba(0,0,0,0.6);
    //   color: white;
    //   text-align: center;
    //   padding: 0.5rem;
    //   opacity: 0;
    //   transition: opacity 0.3s ease;
    // }

    // .studio-item:hover .caption {
    //   opacity: 1;
    // }

    .studio-wrapper {
      width: 100%;

      .studio-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        gap: 0.75rem;
        transition: max-height 0.5s ease;
      }

      .studio-item {
        position: relative;
        overflow: hidden;
        border-radius: 8px;
        cursor: pointer;
        z-index: 1;
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.5s ease, transform 0.5s ease;

        &.wide { grid-column: span 2; }
        &.tall { grid-row: span 2; }
        &.visible {
          opacity: 1;
          transform: translateY(0);
        }
        img {
          width: 100%;
          height: 100%;
          display: block;
          object-fit: cover;
          border-radius: 8px;
          transition: transform 0.3s ease;
        }

        &:hover img {
          transform: scale(1.05);
        }

        .caption {
          position: absolute;
          bottom: 0;
          left: 0;
          right: 0;
          background: rgba(0, 0, 0, 0.6);
          color: white;
          text-align: center;
          padding: 0.5rem;
          opacity: 0;
          transition: opacity 0.3s ease;
        }

        &:hover .caption {
          opacity: 1;
        }
      }

      .toggle-studio {
        display: none; /* par d√©faut desktop */
        margin-top: 1rem;
        padding: 0.5rem 0.75rem;
        background: linear-gradient(45deg, #ea475f, #92dbf5);
        color: white;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        font-size: 1.25rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.25rem;
        transition: background-color 0.2s ease, transform 0.2s ease;

        &:hover {
          transform: scale(1.1);
          background: linear-gradient(45deg, #d03f54, #7ec8e2);
        }

        i {
          transition: transform 0.3s ease;
        }

        &.expanded i {
          transform: rotate(45deg); /* effet + -> √ó */
        }
      }

      @media (max-width: 768px) {
        .toggle-studio {
          display: flex;
        }
      }

      @media (max-width: 768px) {
        .studio-item:nth-child(n + 7) {
          height: 0;
          overflow: hidden;
          opacity: 0;
          transition: height 0.6s ease, opacity 0.6s ease;
        }

        .studio-gallery.expanded .studio-item:nth-child(n + 7) {
          height: auto; /* laisse le contenu d√©cider de la hauteur */
          opacity: 1;
        }
      }

      /* === Desktop : bouton cach√© === */
      @media (min-width: 769px) {
        .toggle-studio {
          display: none;
        }
      }

      /* Animation fluide pour l'expansion */
      .studio-wrapper .studio-gallery {
        max-height: 1000px;
        overflow: hidden;
        transition: max-height 0.6s ease;
      }

      @media (max-width: 768px) {
        .studio-wrapper .studio-gallery {
          max-height: 600px; /* visible part */
        }

        .studio-wrapper .studio-gallery.expanded {
          max-height: 3000px; /* s'ouvre doucement */
        }
      }

    }

    /* Lightbox plein √©cran */
    #lightbox {
      position: fixed;
      inset: 0;
      background: rgba(0, 0, 0, 0.8); /* un peu plus transparent */
      display: none;       /* cach√© par d√©faut */
      align-items: center;
      justify-content: center;
      z-index: 9999;
      padding: 20px;
      box-sizing: border-box;
      flex-direction: column; /* image + l√©gende en colonne */
      text-align: center;     /* centre le texte */
    }

    #lightbox.active {
      display: flex;
    }

    #lightbox img {
      max-width: 90%;
      max-height: 80vh;
      border-radius: 8px;
      margin-bottom: 10px; /* espace entre image et l√©gende */
    }

    #lightbox .lightbox-caption {
      color: #fff;
      font-size: 1rem;
    }

    /* Croix de fermeture */
    #lightbox .close {
      position: absolute;
      top: 20px;
      right: 20px;
      font-size: 30px;
      color: #fff;
      cursor: pointer;
      z-index: 10000; /* toujours au-dessus */
    }

    /* üí° Ajuste les marges lat√©rales du studio sur desktop */
    #studio,
    .studio-section {
      grid-template-columns: 0.5rem minmax(0, 1fr) 0.5rem; /* Base mobile */
    }

    @media (min-width: 1024px) {
      #studio,
      .studio-section {
        grid-template-columns: 0.5rem minmax(0, 5fr) 0.5rem; /* √©largit le contenu */
      }
    }

  </style>

  <section class="pattern">
    <div class="container">
      <p>
        Situ√©s dans le 17√®me arrondissement de Paris, le studio In the Pouchett
        vous accueille pour accompagner vos projets musicaux. Studio orient√©
        autour des Live Sessions, nous proposons cependant des services plus
        classiques tels que l'enregistrement, le mixage et le mastering de vos
        titres.
      </p>
      <p>
        Nous pouvons √©galement apporter notre expertise musicale pour vous aider
        dans vos compositions et vous proposer des musiciens de session
        d'exception.
      </p>
    </div>
  </section>

  <!-- Section R√©f√©rences avec collapse sur mobile -->
  <section class="filled" id="reference">
    <h1>R√©f√©rences</h1>
    <div class="container">
      <div class="videos-wrapper">
        <div class="videos">
          {data.map((i) => <Video url={i.data.url} />)}
        </div>

        <!--
          Bouton REELLEMENT masqu√© par d√©faut via inline style.
          Le script ci-dessous l'affichera uniquement si l'√©cran est mobile.
        -->
        <button class="toggle-videos" style="display:none;" aria-hidden="true">
          <i class="fa-solid fa-plus" aria-hidden="true"></i>
        </button>
      </div>

      <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus.
        Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies
        sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius
        a, semper congue, euismod non, mi.
      </p>
    </div>
  </section>

  <h1 class="pattern" id="studio">Le studio</h1>
  <section class="filled studio-section">
    <div class="container">
      <p>
        D√©couvrez notre studio √† travers ces images : ambiance, mat√©riel et espace de travail.
      </p>

      <!-- Ajout de studio-wrapper -->
      <div class="studio-wrapper">
        <div class="studio-gallery">
          <div class="studio-item tall wide">
            <img src="/website/close_mic_green.jpg" alt="Vue g√©n√©rale du studio" />
            <div class="caption">Vue g√©n√©rale du studio</div>
          </div>
          <div class="studio-item wide">
            <img src="/website/classic-live-sess.jpg" alt="Console de mixage" />
            <div class="caption">Console de mixage</div>
          </div>
          <div class="studio-item">
            <img src="/website/live-concert.jpg" alt="Cabine d'enregistrement" />
            <div class="caption">Cabine d'enregistrement</div>
          </div>
          <div class="studio-item">
            <img src="/website/cover.jpg" alt="Instruments et mat√©riel" />
            <div class="caption">Instruments et mat√©riel</div>
          </div>
          <div class="studio-item">
            <img src="/website/live-sess-cover-small.jpg" alt="Espace d'accueil" />
            <div class="caption">Espace d'accueil</div>
          </div>
          <div class="studio-item tall">
            <img src="/website/close_mic_green.jpg" alt="Espace d'accueil 2" />
            <div class="caption">Espace d'accueil 2</div>
          </div>
          <div class="studio-item wide">
            <img src="/website/close_mic_green.jpg" alt="Instruments et mat√©riel 2" />
            <div class="caption">Instruments et mat√©riel 2</div>
          </div>
          <div class="studio-item tall wide">
            <img src="/website/close_mic_green.jpg" alt="Instruments et mat√©riel 3" />
            <div class="caption">Instruments et mat√©riel 3</div>
          </div>
        </div>

        <!-- Bouton voir plus -->
        <button class="toggle-studio" aria-label="Voir plus">
          <i class="fa-solid fa-plus"></i>
        </button>
      </div>
    </div>
  </section>

  <!-- Lightbox Overlay -->
  <div id="lightbox" class="lightbox">
    <span class="close">&times;</span>
    <img class="lightbox-img" src="" alt="Aper√ßu studio" />
    <div class="lightbox-caption"></div>
  </div>


  <h1 class="pattern" id="materiel">Le mat√©riel</h1>
  <section class="filled">
    <div class="container">
      <p>
        Microphones (dynamique, √† condensateur, √† ruban) - Pr√©amplificateurs -
        Interfaces audio - Moniteurs de studio - Casques de studio - Claviers
        MIDI - Instruments (guitares, claviers, percussions, etc.) -
        Enregistreurs multipistes - Logiciels de production musicale (DAW) -
        Plugins audio (effets, instruments virtuels) - C√¢bles audio (XLR, jack,
        MIDI) - Panneaux acoustiques - Supports de microphone - Table de mixage
        - DI boxes (bo√Ætes de direct) - Enceintes de monitoring - Syst√®mes de
        traitement du son - Accessoires divers (pieds de micro, filtres
        anti-pop, etc.)
      </p>
    </div>
  </section>

  <!-- Script pour collapse/expand mobile avec activation DU BOUTON seulement c√¥t√© client -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const wrapper = document.querySelector(".videos-wrapper");
      if (!wrapper) return;

      const videos = wrapper.querySelector(".videos");
      const button = wrapper.querySelector(".toggle-videos");
      const icon = button?.querySelector("i");

      // MediaQuery et helper pour g√©rer l'affichage du bouton en live (resize)
      const mq = window.matchMedia("(max-width: 768px)");

      function updateVisibility() {
        if (mq.matches) {
          // mobile -> activer le bouton
          button.style.display = "flex";
          button.removeAttribute("aria-hidden");
        } else {
          // desktop -> masquer le bouton absolument, et reset l'√©tat
          button.style.display = "none";
          button.setAttribute("aria-hidden", "true");
          videos.classList.remove("expanded");
          // s'assurer que l'ic√¥ne est en √©tat plus
          if (icon) {
            icon.classList.remove("fa-minus");
            icon.classList.add("fa-plus");
          }
        }
      }

      // initial
      updateVisibility();

      // √©couter changement de breakpoint (responsive)
      if (typeof mq.addEventListener === "function") {
        mq.addEventListener("change", updateVisibility);
      } else if (typeof mq.addListener === "function") {
        mq.addListener(updateVisibility);
      }

      // click handler (ne sera utilisable que si le bouton est visible)
      button.addEventListener("click", (e) => {
        e.preventDefault();
        // si bouton cach√© pour une raison, on ignore
        if (getComputedStyle(button).display === "none") return;

        const expanded = videos.classList.toggle("expanded");

        // changer ic√¥ne + / -
        if (icon) {
          icon.classList.toggle("fa-plus", !expanded);
          icon.classList.toggle("fa-minus", expanded);
        }

        // smooth scroll vers la section quand on √©tend
        // if (expanded) {
        //   wrapper.scrollIntoView({ behavior: "smooth", block: "start" });
        // }
      });
    });

    document.addEventListener("DOMContentLoaded", () => {
      const wrapper = document.querySelector(".studio-wrapper");
      if (!wrapper) return;

      const gallery = wrapper.querySelector(".studio-gallery");
      const button = wrapper.querySelector(".toggle-studio");
      const icon = button.querySelector("i");
      const mq = window.matchMedia("(max-width: 768px)");

      function updateButtonVisibility() {
        if (mq.matches) {
          button.style.display = "flex";
        } else {
          button.style.display = "none";
          gallery.classList.remove("expanded");
          button.classList.remove("expanded");
          icon.classList.remove("fa-minus");
          icon.classList.add("fa-plus");
        }
      }

      updateButtonVisibility();
      mq.addEventListener("change", updateButtonVisibility);

      button.addEventListener("click", (e) => {
        e.preventDefault();
        const expanded = gallery.classList.toggle("expanded");

        if (expanded) {
          icon.className = "fa-solid fa-minus";
        } else {
          icon.className = "fa-solid fa-plus";
        }
      });
    });


    document.addEventListener("DOMContentLoaded", () => {
      const lightbox = document.getElementById("lightbox");
      const lightboxImg = lightbox.querySelector(".lightbox-img");
      const captionText = lightbox.querySelector(".lightbox-caption");
      const closeBtn = lightbox.querySelector(".close");

      document.querySelectorAll(".studio-item img").forEach(img => {
        img.addEventListener("click", () => {
          lightbox.style.display = "flex"; // bien flex pour centrer
          lightboxImg.src = img.src;
          captionText.textContent = img.closest(".studio-item").querySelector(".caption")?.textContent || img.alt;
        });
      });

      closeBtn.addEventListener("click", () => {
        lightbox.style.display = "none";
      });

      lightbox.addEventListener("click", (e) => {
        if (e.target === lightbox) lightbox.style.display = "none";
      });
    });

    // Animation des images du studio quand la section entre dans le viewport
    const observer = new IntersectionObserver((entries, obs) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const items = entry.target.querySelectorAll(".studio-item");
          items.forEach((item, index) => {
            setTimeout(() => item.classList.add("visible"), index * 150);
          });
          obs.unobserve(entry.target); // observe une seule fois
        }
      });
    }, { threshold: 0.2 });

    const gallery = document.querySelector(".studio-gallery");
    if (gallery) observer.observe(gallery);

  </script>
</Layout>
